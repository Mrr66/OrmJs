function dataBaseLocation(o, r, t = "DB local", e = 2097152) { var a = this; a.db = null, a.valueMarcacao = null, a.conectar = function () { a.db = openDatabase(o, r, t, e) }, a.salvar = function (o) { o.constructor.name; a.db.transaction(function (r) { a.valueMarcacao = new Array, a.obterValoresAtributo(o), r.executeSql("INSERT INTO " + o.constructor.name + "(" + a.obterAtributo(Object.keys(o)) + ") VALUES (" + a.valueMarcacao.toString() + ")", a.obterValoresAtributo(o), console.log("OK"), console.log("Erro")) }) }, a.criarTabela = function (o) { var r = o.constructor.name; a.db.transaction(function (t) { console.log("Tabela " + r + " atributos da tabela " + a.obterAtributo(Object.keys(o))), t.executeSql("CREATE TABLE " + r + " (" + a.obterAtributo(Object.keys(o)) + ")") }) }, a.DeletarLinha = function (o) { var r = o.constructor.name; a.db.transaction(function (t) { console.log("Tabela " + r + " atributos da tabela " + a.obterAtributo(Object.keys(o))), o.Id > 0 ? t.executeSql("DELETE FROM SET IdRow = " + o.Id + " (id unique, " + a.obterAtributo(Object.keys(o)) + ")") : console.error("Id do tabela " + r + " não foi passado. Obs: todas entidades deve possuir atributo Id") }) }, a.obterLista = function (o, r) { new Array; var t = o.constructor.name; a.db.transaction(function (o) { o.executeSql("SELECT  rowId, * FROM " + t, [], r, a.errorCB) }) }, a.querySql = function (o, r) { var t = new Array; return a.db.transaction(function (t) { t.executeSql(o, [], r, a.errorCB) }), t }, a.obterPorObject = function (o, r) { var t = o.constructor.name; a.db.transaction(function (e) { o.Id > 0 ? e.executeSql("SELECT  rowId, * FROM " + t + " where rowId = " + o.Id, [], result = r, a.errorCB) : console.error("Id da tabela " + t + " não foi passado. Obs: todas entidades deve possuir atributo Id") }) }, a.obterPorId = function (o, r, t) { var e = r.name; void 0 === e && console.error("É nescessario passar a endidade por paramentro."), a.db.transaction(function (r) { o > 0 ? r.executeSql("SELECT  rowId, * FROM " + e + " where rowId = " + o, [], result = t, a.errorCB) : console.error("Id da tabela " + e + " não foi passado. Obs: todas entidades deve possuir atributo Id") }) }, a.obterAtributo = function (o) { var r = ""; return o.forEach((t, e) => { r += t, e + 1 < o.length && (r += ",") }), r }, a.obterValoresAtributo = function (o) { var r = new Array; return Object.getOwnPropertyNames(o).forEach(t => { r.push(o[t]), a.valueMarcacao.push("?") }), r }, a.excluirTabela = function (o) { var r = o.constructor.name; a.db.transaction(function (o) { console.log("Tabela " + r + " foi excluida "), o.executeSql("DROP TABLE " + r) }) }, a.errorCB = function (o) { console.log("Erro interno do app: " + o, "Erro") }, a.toList = function (o, r) { for (var t = new Array, e = 0; e < r.length; e++)t.push(r[e]); return t } }